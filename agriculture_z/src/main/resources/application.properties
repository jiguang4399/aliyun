#将日志信息输出到指定目录下&&根据不同电脑服务器，要自行修改！！！
logging.path=C:\\IDEA_mode_project\\agriculture\\log
#logging.path=/home/git/agriculture_z/log

##这些配置本项目没用，懒的删了
spring.mvc.view.suffix=.html
spring.mvc.view.prefix=/

#Database     &useSSL=false是数据库连接方式，不加会有警告，不影响运行 &&根据不同电脑服务器，要自行修改！！！
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/farming?characterEncoding=utf8&useSSL=false
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

#JPA
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update

#端口号
server.port=8080

#============================================================================ ！！根据不同电脑服务器，要自行修改！！！
##文件上传配置:  ！！根据不同电脑服务器，要自行修改！！！

#文件服务器的根目录：(window)
upload.filepath = ./src/main/webapp/
#文件服务器的根目录：(linux)
#upload.filepath = /home/git/picture/

##ueditor配置文件：

#文件服务器的根目录(富文本)（绝对路径）(window)
ueditor.filepath = C:\\agriculture\\agriculture_z\\src\\main\\webapp\\
#文件服务器的根目录（绝对路径）(linux)
#ueditor.filepath = /home/git/picture/

redirect.url = http://127.0.0.1:8080/

#redirect.url = http://112.74.53.186:8080/

#文件服务器ip地址(富文本)：(window)
nginx.url = http://127.0.0.1:8088/
#文件服务器ip地址：(linux)
#nginx.url = http://112.74.53.186/

#富文本
#=======================================================
##单个文件最大KB/MB
#spring-boot-starter-parent2.0.0的设置格式
#spring.servlet.multipart.max-file-size=100MB

#spring-boot-starter-parent1.4.3的设置格式
spring.http.multipart.maxFileSize = 100Mb
####

#设置总上传数据大小
#spring-boot-starter-parent2.0.0的设置格式
#spring.servlet.multipart.max-request-size=200MB

#spring-boot-starter-parent1.4.3的设置格式
spring.http.multipart.maxRequestSize=1000Mb

# 内嵌 Elasticsearch 实例。默认存储位置是工作目录的 elastic 目录 (测试用)
#spring.data.elasticsearch.properties.path.home=target/elastic
# 远程服务
spring.data.elasticsearch.cluster-nodes=localhost:9300
# 设置连接超时时间
spring.data.elasticsearch.properties.transport.tcp.connect_timeout=120s

#jwt相关配置

jwt.header=Authorization
#密钥
jwt.secret=mySecret

#token7天不过期
jwt.expiration=604800
#jwt.expiration=30

jwt.tokenHead=Bearer
jwt.exceptUrl="auth/**"
#jwt.route.authentication.path=auth
jwt.route.authentication.path=auth/login
jwt.route.authentication.refresh=auth/refresh
#jwt.route.authentication.register:"auth/register"

##github第三方登录相关配置  &&根据不同电脑服务器，要自行修改！！！
github.client.clientId=1eab4b8351a7e2b10cc9
github.client.clientSecret=ea7611bd78b69f80b492ea34985d13668f732027
github.client.accessTokenUri=https://github.com/login/oauth/access_token
github.client.userAuthorizationUri=https://github.com/login/oauth/authorize
github.client.pre-established-redirect-uri=http://112.74.53.186:8080/login/github
github.client.clientAuthenticationScheme= form

github.resource.userInfoUri=https://api.github.com/user

##weibo第三方登录相关配置
weibo.client.clientId=4111342800
weibo.client.clientSecret=2cfb29ce4ec325c8d3cd85bb57c3edb3
weibo.client.accessTokenUri=https://api.weibo.com/oauth2/access_token
weibo.client.userAuthorizationUri=https://api.weibo.com/oauth2/authorize
weibo.client.pre-established-redirect-uri=http://112.74.53.186:8080/login/weibo
weibo.client.clientAuthenticationScheme= form

weibo.resource.userInfoUri=https://api.weibo.com/2/users/show.json

##qq第三方登录相关配置
qq.client.clientId=101478130
#qq.client.clientId=101473849
qq.client.clientSecret=41d7658bbf903c1b90ae53ffab783005
#qq.client.clientSecret=773d4cc307486cc01a554c184ef6c98f
qq.client.accessTokenUri=https://graph.qq.com/oauth2.0/token
qq.client.userAuthorizationUri=https://graph.qq.com/oauth2.0/authorize
qq.client.pre-established-redirect-uri=http://112.74.53.186:8080/login/qq
qq.client.clientAuthenticationScheme= form
qq.client.openIdUri=https://graph.qq.com/oauth2.0/me

qq.resource.userInfoUri=https://graph.qq.com/user/get_user_info

##荧石相关配置
camera.client.clientId=73d32d2923914712a789c3690bd70fc0
camera.client.clientSecret=a3fefd1ac38e682c8bc26ebbebb04ca5
camera.client.accessTokenUri=https://open.ys7.com/api/lapp/token/get


##支付宝相关配置：(沙盒环境)
#商户UID
alipay.uid=2088102175651514
#应用ID,您的AppId，收款账号既是您的AppId对应支付宝账号
alipay.app_id=2016091400512395
# 商户私钥，您的PKCS8格式RSA2私钥
alipay.merchant_private_key=MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCuiUsqwMifdK6jx17yeNb8Ts0UrRDy6xLVCgss1pJU8cD7cYXYZc+062uWftP5n2cBLBVl5lf073T2cYHMhWdB35EXuLuWJsf0NKs/Rn66RTenidVWLF4bUcx22C7bWmDyyZpklOzZP07X5U+12MpCjWBOxyYJM+r9968hndiuikemJ3Pq7W5kLKqlPh5Wo2PBNp2JNIf9F2OcX3634qJMXr+gNHUodkgxBdJ3r0aEKBkzwp8PwOc8OO9LYCLeHih/+J7zATWp13SzliMarrPdbaDrZExZEbQTO/H3paWi0oO5DM+n8ttWyedQHmsZ1+0JRs5dRtsPOOjE2y+DFy0RAgMBAAECggEAPB2j20TtlSaOZHDuPhvrCJpnvsBhfxoCsYg1EyuQ2Vsveiu+yys+IHWZ6AslHeyOgPPbJu7wyreTlLLB31zvlNvZUM9bJTuUUYO2nCO+0I+4vKcX6Qd9HnHNN/38HaeCjv1rhUtaTPWmRWyBSQQznjqtulSTwEW2oeUm2DBTCsKaizvt+IERnX7ykYPUiQ9hLGtYUF0k5vGNfwMTI/Byjw4/kz3TQG1qvyzCsr+FYJtF6fWq1Y6lCnX79r6yuGDdVVfOgbxoAHaeMOrlqlwsTG6oCdAG1kjjUoP4nrF8LkW7Twvm1W98jv/53026PhVpyrpE0a+oJJmZBTb560fTpQKBgQDWyX6q277iOB5dZ31ex1pSm/iSnEr1ETyDEK88bRrkvqwes22YdFLFjVC9W1+Kmt+aTjXKXwXM2paW0SqbvYI0D7h05Yi90V9CiytgfV2FRkIUkMLD/jhtWTHsnmSCnL57Myyv59jk59ZaNvvEitzOc2ExFVccnDEkp6kDcOo/gwKBgQDQBqZMpNB2HmrpVVCheSvlM5JMQLeRiWYVLDmYtdIz2HiW81yDG2bxGvO4W7dmiO8lQUIP40LHoAJgUSt/RGfyx8R1YnX8yTtGrdHsKjsMW0dleMkyLrxFP3CWUwEeTwNa/0FxPizswQgF6RaQ96l/9SYvCSuMAHGpP9e81fJI2wKBgHMHMjkaul24pDptpCzQIsU/Fp6d6V7ZvkiK9O4tmEuM+ezvNvCAy5tVFTpz5vT6AGpJHHGm9hpBrohSuLjzgvmSubyQ+Ox/Zr7ifXaNbTpk6BrPdB821M1rCVupcDaq7zBXtcT3K6dbqeZir+8QVzSRgimhPifqVj9FMzTOkgU1AoGAdCZCVCjx/AGf0AhCrOXrDF5vIQRBepEs3kWDIzDh3PDQ4/edf9ac86II0rbi/+0VGcgGCrjpYGyG5yBrGPQo1fWUS7ZeCnaREjWbMDGkJpIQmyeFru9JT6DMTCKsTS/wv64l7AS7MLXWtPYgE3E0wq0uVLTaC6Fz1PxAiL8sOGECgYEAp2OfL8IN6LS1DYnPwF/fW9laPMVO4C7VCWFrba2XKyMgRHlk10pLVO7I5C4hmzKLkusLuqXDBrCqwaE35RZw5gnZu9XlYZ2NA9rpRT/v2T9UhwEo4NVyGRhv4jCsGmMoa/yO81CR354/e+iAMjVE+v7rMfth22EpMzkfDN2qYng=
# 支付宝公钥,查看地址：https://openhome.alipay.com/platform/keyManage.htm 对应APPID下的支付宝公钥。
alipay.alipay_public_key=MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAyMd/mKdmU+gCChQfSMx6SDw9ap4fBpjesLyh090Ft2Ee6R/RawzBGnbb99aaI6M1qdgC+AwTQGIwVh6eIymPLE9nem/Z387CvlfTXP4IWJQDb9+7beRL3HFFsVjioMr29jf4LRR1X7bY7YYB5/fXTtVmdeZFbkezDjJ/e3h8cRTEelVvJOT9VoLDZJhw2LCPUmtW2U5kVlBdk5967y5JjFu61tB50ia7J5eAtgF8sE8eeWX2Kly8gz8hmSyBzc8VKFVU1QVhj8tz/qnH75nmWOD2SIPrKYTrus0P96Tfz1ob3k8ZKMCqof543KsDzxOuehxkJPDzGF/EOu4O9LhoPwIDAQAB
# 服务器异步通知页面路径  需http://格式的完整路径，不能加?id=123这类自定义参数，必须外网可以正常访问！！&&http://m5nr5i.natappfree.cc是natapp的隧道地址
alipay.notify_url=http://m5nr5i.natappfree.cc/alipay/notify

# 页面跳转同步通知页面路径 需http://格式的完整路径，不能加?id=123这类自定义参数  &&根据不同电脑服务器，要自行修改！！！
#alipay.return_url=http://127.0.0.1:8080/alipay/return
alipay.return_url=http://112.74.53.186/alipay/return

# 签名方式
alipay.sign_type=RSA2
# 支付宝网关\n# 沙箱：https://openapi.alipaydev.com/gateway.do
# 正式：https://openapi.alipay.com/gateway.do
alipay.gateway_url=https://openapi.alipaydev.com/gateway.do


#Actuator监控相关配置:

#关掉安全认证   如果management.security.enabled的值是false的话，除开health接口还依赖endpoints.health.sensitive的配置外，其他接口都不需要输入用户名和密码了。
management.security.enabled=false
#管理端口调整成8090   暴露接口使用的端口，为了和api接口使用的端口进行分离
management.port=8090
#actuator的访问路径
management.context-path=/monitor
#启用接口关闭Spring Boot
endpoints.shutdown.enabled=true

#Spring Boot Admin相关配置：

#配置Admin Server的地址  启动Client端服务，再次访问服务：http://localhost:8000可以看到客户端的相关监控信息。
spring.boot.admin.url=http://localhost:8010










